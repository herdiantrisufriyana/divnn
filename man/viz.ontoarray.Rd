% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viz.ontoarray-function.R
\name{viz.ontoarray}
\alias{viz.ontoarray}
\title{Visualize an ontoarray for visible neural network (VNN) modeling}
\usage{
viz.ontoarray(tidy_set, ontonet, batch_size = 32, verbose = T)
}
\arguments{
\item{tidy_set}{TidySet, an ExpressionSet with three tables.}

\item{ontonet}{A Keras model object, a pointer to Keras model object in
python environment, which will be an input to train VNN model using Keras R
package.}

\item{batch_size}{An integer of how much samples are generated everytime
this function runs to get the output of the representation layers. If all
samples are generated, this function will loop over the samples. But, only
the same sample size will be generated.}

\item{verbose}{Verbosity, a logical indicating whether progress should be
shown.}

\item{pal}{A vector of two characters for colors representing the minimum
and maximum values of the metric.}

\item{label}{A logical whether feature label are shown.}

\item{label.family}{A character of font family for feature label.}

\item{label.size}{A numeric of font size for feature label.}

\item{label.color}{A character of font color for feature label.}

\item{grid_col}{A integer of the column number of grid for showing for
ontoarrays for all ontologies per channel (z).}
}
\value{
viz.ontoarray object, a list of ontoarrays containing differences of
summarized values between event and non-event. For each ontology, there are
an output of a layer representing the ontology, and an ontotype information
about features grouped within the ontology. Visualization are shown by
\code{plot()}.
}
\description{
This function visualizes an ontoarray using the average values representing
all ontoarrays. The average value of event is substracted by that of
non-event. The visualization demonstrates a representation layer per
ontology as relative values between event and non-event.
}
\examples{

## Create input example
input=utils.example()

## Compile input to a TidySet
tidy_set=
  TidySet.compile(
    value=input$value
    ,outcome=input$outcome
    ,similarity=input$similarity
    ,mapping=input$mapping
    ,ontology=input$ontology
  )
## Create ontonet (Keras model object) generator function
ontonet=generator.ontonet(tidy_set)

## Visualize ontoarray
viz.ontoarray(tidy_set,ontonet)
}
\keyword{ontoarray}
\keyword{visualization}
